// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using payrollBackend;

#nullable disable

namespace payrollBackend.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251008120150_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("payrollBackend.Additional", b =>
                {
                    b.Property<int>("AdditionalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("AdditionalId"));

                    b.Property<float>("AdditionalSalary")
                        .HasColumnType("float");

                    b.Property<string>("Remarks")
                        .HasColumnType("longtext");

                    b.Property<int>("SalaryId")
                        .HasColumnType("int");

                    b.HasKey("AdditionalId");

                    b.HasIndex("SalaryId");

                    b.ToTable("Additionals");
                });

            modelBuilder.Entity("payrollBackend.Attendance", b =>
                {
                    b.Property<int>("AttendanceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("AttendanceId"));

                    b.Property<DateTime>("AttendanceDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("AttendanceStatus")
                        .HasColumnType("int");

                    b.Property<int>("DutyType")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.HasKey("AttendanceId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Attendances");
                });

            modelBuilder.Entity("payrollBackend.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("EmployeeId"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PagIbig")
                        .HasColumnType("longtext");

                    b.Property<string>("PhilHealth")
                        .HasColumnType("longtext");

                    b.Property<string>("Position")
                        .HasColumnType("longtext");

                    b.Property<int>("SalaryId")
                        .HasColumnType("int");

                    b.Property<string>("Sss")
                        .HasColumnType("longtext");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("EmployeeId");

                    b.HasIndex("SalaryId")
                        .IsUnique();

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("payrollBackend.FixedDeduction", b =>
                {
                    b.Property<int>("FixedDeductionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("FixedDeductionId"));

                    b.Property<float>("PagIbig")
                        .HasColumnType("float");

                    b.Property<float>("PhilHealth")
                        .HasColumnType("float");

                    b.Property<float>("Sss")
                        .HasColumnType("float");

                    b.Property<float>("Tax")
                        .HasColumnType("float");

                    b.HasKey("FixedDeductionId");

                    b.ToTable("FixedDeductions");
                });

            modelBuilder.Entity("payrollBackend.OtherDeduction", b =>
                {
                    b.Property<int>("OtherDeductionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("OtherDeductionId"));

                    b.Property<float>("Deduction")
                        .HasColumnType("float");

                    b.Property<string>("Remarks")
                        .HasColumnType("longtext");

                    b.Property<int>("SalaryId")
                        .HasColumnType("int");

                    b.HasKey("OtherDeductionId");

                    b.HasIndex("SalaryId");

                    b.ToTable("OtherDeductions");
                });

            modelBuilder.Entity("payrollBackend.Salary", b =>
                {
                    b.Property<int>("SalaryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("SalaryId"));

                    b.Property<float>("BasicRate")
                        .HasColumnType("float");

                    b.Property<DateTime>("EffectiveDate")
                        .HasColumnType("datetime(6)");

                    b.Property<float>("FirstHalf")
                        .HasColumnType("float");

                    b.Property<float>("GrossSalary")
                        .HasColumnType("float");

                    b.Property<float>("NetSalary")
                        .HasColumnType("float");

                    b.Property<float>("SecondHalf")
                        .HasColumnType("float");

                    b.HasKey("SalaryId");

                    b.ToTable("Salaries");
                });

            modelBuilder.Entity("payrollBackend.Additional", b =>
                {
                    b.HasOne("payrollBackend.Salary", "Salary")
                        .WithMany("Additionals")
                        .HasForeignKey("SalaryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Salary");
                });

            modelBuilder.Entity("payrollBackend.Attendance", b =>
                {
                    b.HasOne("payrollBackend.Employee", "Employee")
                        .WithMany("Attendances")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("payrollBackend.Employee", b =>
                {
                    b.HasOne("payrollBackend.Salary", "Salary")
                        .WithOne("Employee")
                        .HasForeignKey("payrollBackend.Employee", "SalaryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Salary");
                });

            modelBuilder.Entity("payrollBackend.OtherDeduction", b =>
                {
                    b.HasOne("payrollBackend.Salary", "Salary")
                        .WithMany("OtherDeductions")
                        .HasForeignKey("SalaryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Salary");
                });

            modelBuilder.Entity("payrollBackend.Employee", b =>
                {
                    b.Navigation("Attendances");
                });

            modelBuilder.Entity("payrollBackend.Salary", b =>
                {
                    b.Navigation("Additionals");

                    b.Navigation("Employee")
                        .IsRequired();

                    b.Navigation("OtherDeductions");
                });
#pragma warning restore 612, 618
        }
    }
}

// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using payrollBackend.data;

#nullable disable

namespace payrollBackend.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251021130705_NewDbSchema")]
    partial class NewDbSchema
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("payrollBackend.Models.AttendanceModels.Attendance", b =>
                {
                    b.Property<int>("AttendanceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("AttendanceId"));

                    b.Property<DateTime>("AttendanceDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("AttendanceTableId")
                        .HasColumnType("int");

                    b.Property<int>("AttendanceTableLayoutId")
                        .HasColumnType("int");

                    b.Property<int>("AttendanceTypeId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.HasKey("AttendanceId");

                    b.HasIndex("AttendanceTableLayoutId");

                    b.HasIndex("AttendanceTypeId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Attendances");
                });

            modelBuilder.Entity("payrollBackend.Models.AttendanceModels.AttendanceTableLayout", b =>
                {
                    b.Property<int>("AttendanceTableLayoutId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("AttendanceTableLayoutId"));

                    b.Property<int>("ColumnNumber")
                        .HasColumnType("int");

                    b.Property<int>("DutyTypeId")
                        .HasColumnType("int");

                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.HasKey("AttendanceTableLayoutId");

                    b.HasIndex("DutyTypeId");

                    b.HasIndex("PostId");

                    b.ToTable("AttendanceTableLayouts");
                });

            modelBuilder.Entity("payrollBackend.Models.AttendanceModels.AttendanceType", b =>
                {
                    b.Property<int>("AttendanceTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("AttendanceTypeId"));

                    b.Property<string>("AttendanceDateType")
                        .IsRequired()
                        .HasColumnType("varchar(5)");

                    b.HasKey("AttendanceTypeId");

                    b.ToTable("AttendanceTypes");
                });

            modelBuilder.Entity("payrollBackend.Models.AttendanceModels.DutyType", b =>
                {
                    b.Property<int>("DutyTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("DutyTypeId"));

                    b.Property<string>("AttendanceDutyType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("DutyTypeId");

                    b.ToTable("DutyTypes");
                });

            modelBuilder.Entity("payrollBackend.Models.EmployeeModels.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("EmployeeId"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PagIbig")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("PhilHealth")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Sss")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("EmployeeId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("payrollBackend.Models.PostModels.Post", b =>
                {
                    b.Property<int>("PostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("PostId"));

                    b.Property<string>("PostName")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("PostId");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("payrollBackend.Models.SalaryModels.Additional", b =>
                {
                    b.Property<int>("AdditionalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("AdditionalId"));

                    b.Property<decimal>("AdditionalSalary")
                        .HasColumnType("decimal(8, 3)");

                    b.Property<DateTime>("EffectiveDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("SalaryId")
                        .HasColumnType("int");

                    b.HasKey("AdditionalId");

                    b.HasIndex("SalaryId");

                    b.ToTable("Additionals");
                });

            modelBuilder.Entity("payrollBackend.Models.SalaryModels.FixedDeduction", b =>
                {
                    b.Property<int>("FixedDeductionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("FixedDeductionId"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(8, 3)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.HasKey("FixedDeductionId");

                    b.ToTable("FixedDeductions");
                });

            modelBuilder.Entity("payrollBackend.Models.SalaryModels.OtherDeduction", b =>
                {
                    b.Property<int>("OtherDeductionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("OtherDeductionId"));

                    b.Property<decimal>("DeductionAmount")
                        .HasColumnType("decimal(8, 3)");

                    b.Property<DateTime>("EffectiveDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("SalaryId")
                        .HasColumnType("int");

                    b.HasKey("OtherDeductionId");

                    b.HasIndex("SalaryId");

                    b.ToTable("OtherDeductions");
                });

            modelBuilder.Entity("payrollBackend.Models.SalaryModels.Salary", b =>
                {
                    b.Property<int>("SalaryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("SalaryId"));

                    b.Property<DateTime>("EffectiveDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<decimal>("FirstHalf")
                        .HasColumnType("decimal(8, 3)");

                    b.Property<int>("FixedDeductionId")
                        .HasColumnType("int");

                    b.Property<decimal>("GrossSalary")
                        .HasColumnType("decimal(8, 3)");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("NetSalary")
                        .HasColumnType("decimal(8, 3)");

                    b.Property<decimal>("SecondHalf")
                        .HasColumnType("decimal(8, 3)");

                    b.HasKey("SalaryId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("FixedDeductionId");

                    b.ToTable("Salaries");
                });

            modelBuilder.Entity("payrollBackend.Models.AttendanceModels.Attendance", b =>
                {
                    b.HasOne("payrollBackend.Models.AttendanceModels.AttendanceTableLayout", "AttendanceTableLayout")
                        .WithMany()
                        .HasForeignKey("AttendanceTableLayoutId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("payrollBackend.Models.AttendanceModels.AttendanceType", "AttendanceType")
                        .WithMany()
                        .HasForeignKey("AttendanceTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("payrollBackend.Models.EmployeeModels.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AttendanceTableLayout");

                    b.Navigation("AttendanceType");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("payrollBackend.Models.AttendanceModels.AttendanceTableLayout", b =>
                {
                    b.HasOne("payrollBackend.Models.AttendanceModels.DutyType", "DutyType")
                        .WithMany()
                        .HasForeignKey("DutyTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("payrollBackend.Models.PostModels.Post", "Post")
                        .WithMany()
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DutyType");

                    b.Navigation("Post");
                });

            modelBuilder.Entity("payrollBackend.Models.SalaryModels.Additional", b =>
                {
                    b.HasOne("payrollBackend.Models.SalaryModels.Salary", "Salary")
                        .WithMany()
                        .HasForeignKey("SalaryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Salary");
                });

            modelBuilder.Entity("payrollBackend.Models.SalaryModels.OtherDeduction", b =>
                {
                    b.HasOne("payrollBackend.Models.SalaryModels.Salary", "Salary")
                        .WithMany()
                        .HasForeignKey("SalaryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Salary");
                });

            modelBuilder.Entity("payrollBackend.Models.SalaryModels.Salary", b =>
                {
                    b.HasOne("payrollBackend.Models.EmployeeModels.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("payrollBackend.Models.SalaryModels.FixedDeduction", "FixedDeduction")
                        .WithMany()
                        .HasForeignKey("FixedDeductionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("FixedDeduction");
                });
#pragma warning restore 612, 618
        }
    }
}
